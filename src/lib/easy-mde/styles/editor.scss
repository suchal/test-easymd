// BASICS
.CodeMirror {
  background: $cm-background-color;
  border: 1px solid $cm-border-color;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  color: $cm-text-color;
  direction: ltr;
  font: inherit;
  font-family: monospace;
  height: $easymde-height;
  min-height: $easymde-min-height;
  overflow: hidden;
  padding: 10px;
  position: relative;
  z-index: 1;


  pre {
    // Reset some styles that the rest of the page might have set
    background: transparent;
    -moz-border-radius: 0;
    -webkit-border-radius: 0;
    border-radius: 0;
    border-width: 0;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    -webkit-font-variant-ligatures: contextual;
    font-variant-ligatures: contextual;
    line-height: inherit;
    margin: 0;
    overflow: visible;
    padding: 0 4px; // Horizontal padding of content
    position: relative;
    -webkit-tap-highlight-color: transparent;
    white-space: pre;
    word-wrap: normal;
    z-index: 2;
  }

  // Shown when moving in bi-directional text
  .CodeMirror-secondarycursor {
    border-left: 1px solid $cm-secondarycursor-border-color;
  }

  .CodeMirror-matchingbracket {
    color: $cm-secondarycursor-border-color;
  }

  .CodeMirror-nonmatchingbracket {
    color: $cm-nonmatchingbracket-color;
  }

  .CodeMirror-code {

    .cm-tag {
      color: $cm-tag-text-color;
    }

    .cm-attribute {
      color: $cm-attribute-text-color;
    }

    .cm-string {
      color: $cm-string-text-color;
    }

    .cm-header-1 {
      font-size: 200%;
      line-height: 200%;
    }

    .cm-header-2 {
      font-size: 160%;
      line-height: 160%;
    }

    .cm-header-3 {
      font-size: 125%;
      line-height: 125%;
    }

    .cm-header-4 {
      font-size: 110%;
      line-height: 110%;
    }

    .cm-comment {
      background: $cm-comment-background-color;
      border-radius: 2px;
    }

    .cm-link {
      color: $cm-link-text-color;
    }

    .cm-url {
      color: $cm-url-text-color;
    }

    .cm-strikethrough {
      text-decoration: line-through;
    }

  }

  .CodeMirror-selected {
    background: $cm-selected-background-color;
  }

  .CodeMirror-placeholder {
    opacity: .5;
  }
}

// PADDING

.CodeMirror-lines {
  cursor: text;
  min-height: 1px; // prevents collapsing before first draw
  padding: 4px 0; // Vertical padding around content
}


.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  background-color: $cm-square-between-scrollbars;
}

// GUTTER

.CodeMirror-gutters {
  background-color: $cm-gutter-background-color;
  border-right: 1px solid $cm-gutter-border-right-color;
  left: 0;
  min-height: 100%;
  position: absolute;
  top: 0;
  white-space: nowrap;
  z-index: 3;
}

.CodeMirror-linenumber {
  color: $cm-linenumber-color;
  min-width: 20px;
  padding: 0 3px 0 5px;
  text-align: right;
  white-space: nowrap;
}

.CodeMirror-guttermarker {
  color: $cm-guttermarker-color;
}

.CodeMirror-guttermarker-subtle {
  color: $cm-guttermarker-subtle-color;
}

// CURSOR
.CodeMirror-cursor {
  border-left: 1px solid $cm-cursor-border-left-color;
  border-right: 0;
  pointer-events: none;
  position: absolute;
  width: 0;
}

.cm-fat-cursor .CodeMirror-cursor {
  background: $cm-cursor-background-color;
  border: 0;
  width: auto;
}

.cm-fat-cursor .CodeMirror-cursors {
  z-index: 1;
}

.cm-fat-cursor-mark {
  -moz-animation: blink 1.06s steps(1) infinite;
  -webkit-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: $cm-fat-cursor-mark-background-color;
}

.cm-animate-fat-cursor {
  -moz-animation: blink 1.06s steps(1) infinite;
  -webkit-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: $cm-animate-fat-cursor-background-color;
  border: 0;
  width: auto;
}

@keyframes blink {
  50% {
    background-color: transparent;
  }
}

.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}

.CodeMirror-rulers {
  bottom: -20px;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: -50px;
}

.CodeMirror-ruler {
  border-left: 1px solid $cm-ruler-border-left-color;
  bottom: 0;
  position: absolute;
  top: 0;
}

// DEFAULT THEME

.cm-s-default .cm-header {
  color: $cm-s-default-header-text-color;
}

.cm-s-default .cm-quote {
  color: $cm-s-default-quote-text-color;
}

.cm-negative {
  color: $cm-negative-text-color;
}

.cm-positive {
  color: $cm-positive-text-color;
}

.cm-header,
.cm-strong {
  font-weight: bold;
}

.cm-em {
  font-style: italic;
}

.cm-link {
  text-decoration: underline;
}

.cm-strikethrough {
  text-decoration: line-through;
}

.cm-s-default .cm-keyword {
  color: $cm-s-default-keyword-text-color;
}

.cm-s-default .cm-atom {
  color: $cm-s-default-atom-text-color;
}

.cm-s-default .cm-number {
  color: $cm-s-default-number-text-color;
}

.cm-s-default .cm-def {
  color: $cm-s-default-def-text-color;
}

.cm-s-default .cm-variable-2 {
  color: $cm-s-default-variable-2-text-color;
}

.cm-s-default .cm-variable-3,
.cm-s-default .cm-type {
  color: $cm-s-default-variable-3-type-text-color;
}

.cm-s-default .cm-comment {
  color: $cm-s-default-comment-text-color;
}

.cm-s-default .cm-string {
  color: $cm-s-default-string-text-color;
}

.cm-s-default .cm-string-2 {
  color: $cm-s-default-string-2-text-color;
}

.cm-s-default .cm-meta {
  color: $cm-s-default-meta-text-color;
}

.cm-s-default .cm-qualifier {
  color: $cm-s-default-qualifier-text-color;
}

.cm-s-default .cm-builtin {
  color: $cm-s-default-builtin-text-color;
}

.cm-s-default .cm-bracket {
  color: $cm-s-default-bracket-text-color;
}

.cm-s-default .cm-tag {
  color: $cm-s-default-tag-text-color;
}

.cm-s-default .cm-attribute {
  color: $cm-s-default-attribute-text-color;
}

.cm-s-default .cm-hr {
  color: $cm-s-default-hr-text-color;
}

.cm-s-default .cm-link {
  color: $cm-s-default-link-text-color;
}

.cm-s-default .cm-error {
  color: $cm-s-default-error-text-color;
}

.cm-invalidchar {
  color: $cm-s-default-invalidchar-text-color;
}

.CodeMirror-composing {
  border-bottom: 2px solid;
}

// Default styles for common addons

.CodeMirror-matchingtag {
  background: $cm-matchingtag-background-color;
}

.CodeMirror-activeline-background {
  background: $cm-activeline-background-color;
}

// STOP

// The rest of this file contains styles related to the mechanics of
// the editor. You probably shouldn't touch them.

// Things will break if this is overridden
// 30px is the magic margin used to hide the element's real scrollbars
// See overflow: hidden in .CodeMirror

.CodeMirror-scroll {
  height: 100%;
  margin-bottom: -30px;
  margin-right: -30px;
  min-height: $easymde-min-height;
  outline: none; // Prevent dragging from highlighting the element
  overflow: scroll;
  padding-bottom: 30px;
  position: relative;
}

.CodeMirror-sizer {
  border-right: 30px solid transparent;
  position: relative;
}

// The fake, visible scrollbars. Used to force redraw during scrolling
// before actual scrolling happens, thus preventing shaking and
// flickering artifacts.

.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  display: none;
  position: absolute;
  z-index: 6;
}

.CodeMirror-vscrollbar {
  overflow-x: hidden;
  overflow-y: scroll;
  right: 0;
  top: 0;
}

.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-x: scroll;
  overflow-y: hidden;
}

.CodeMirror-scrollbar-filler {
  bottom: 0;
  right: 0;
}

.CodeMirror-gutter-filler {
  bottom: 0;
  left: 0;
}

.CodeMirror-gutter {
  display: inline-block;
  height: 100%;
  margin-bottom: -30px;
  vertical-align: top;
  white-space: normal;
}

.CodeMirror-gutter-wrapper {
  background: none;
  border: 0;
  position: absolute;
  z-index: 4;

  ::selection,
  ::-moz-selection {
    background-color: transparent;
  }
}

.CodeMirror-gutter-background {
  bottom: 0;
  position: absolute;
  top: 0;
  z-index: 4;
}

.CodeMirror-gutter-elt {
  cursor: default;
  position: absolute;
  z-index: 4;
}


.CodeMirror-wrap pre {
  white-space: pre-wrap;
  word-break: normal;
  word-wrap: break-word;
}

.CodeMirror-linebackground {
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  padding: .1px; // Force widget margins to stay inside of the container
  position: relative;
  z-index: 2;
}

.CodeMirror-rtl pre {
  direction: rtl;
}

.CodeMirror-code {
  outline: none;
}

// Force content-box sizing for the elements where we expect it
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  height: 0;
  overflow: hidden;
  position: absolute;
  visibility: hidden;
  width: 100%;

  pre {
    position: static;
  }
}

.CodeMirror-cursors {
  position: relative;
  visibility: hidden;
  z-index: 3;
}

.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused .CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected {
  background-color: $cm-selected-background-color;
}

.CodeMirror-focused .CodeMirror-selected {
  background-color: $cm-focused-selected-background-color;
}

.CodeMirror-crosshair {
  cursor: crosshair;
}

.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
  background-color: $cm-line-background-color;
}

.CodeMirror-line::-moz-selection,
.CodeMirror-line > span::-moz-selection,
.CodeMirror-line > span > span::-moz-selection {
  background-color: $cm-line-background-color;
}

.cm-searching {
  background-color: $cm-searching-background-color;
  // background-color: rgba(255, 255, 0, 0.4);
}

// Used to force a border model for a node
.cm-force-border {
  padding-right: .1px;
}

@media print {
  // Hide the cursor when printing
  .CodeMirror .CodeMirror-cursors {
    visibility: hidden;
  }
}

// See issue #2901
.cm-tab-wrap-hack::after {
  content: '';
}

// Help users use markselection to safely style text background
.CodeMirror-selectedtext {
  background: none;
}

.CodeMirror-fullscreen {
  background: $cm-fullscreen-background-color;
  bottom: 0;
  height: auto;
  left: 0;
  position: fixed;
  right: 0;
  top: 50px;
  z-index: $easymde-zindex;
}

.CodeMirror-sided {
  width: 50%;
}

.editor-toolbar {
  border: 1px solid $cm-editor-toolbar-border-color;
  border-bottom: none;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  opacity: .6;
  padding: 0 10px;
  position: relative;
  user-select: none;

  &.fullscreen {
    background: $cm-editor-toolbar-fullscreen-background-color;
    border: 0;
    box-sizing: border-box;
    height: 50px;
    left: 0;
    opacity: 1;
    overflow-x: auto;
    overflow-y: hidden;
    padding-bottom: 10px;
    padding-top: 10px;
    position: fixed;
    top: 0;
    white-space: nowrap;
    width: 100%;
    z-index: $easymde-zindex;

    &::before {
      background: linear-gradient(to right, $editor-toolbar-gradient-start 0%, $editor-toolbar-gradient-end 100%);
      height: 50px;
      left: 0;
      margin: 0;
      padding: 0;
      position: fixed;
      top: 0;
      width: 20px;
    }

    &::after {
      background: linear-gradient(to right, $editor-toolbar-gradient-end 0%, $editor-toolbar-gradient-start 100%);
      height: 50px;
      margin: 0;
      padding: 0;
      position: fixed;
      right: 0;
      top: 0;
      width: 20px;
    }
  }

  a {
    border: 1px solid transparent;
    border-radius: 3px;
    color: $editor-toolbar-link-color;
    cursor: pointer;
    display: inline-block;
    height: 30px;
    margin: 0;
    text-align: center;
    text-decoration: none;
    width: 30px;

    &.active,
    &:hover {
      background: $editor-toolbar-link-active-background-color;
      border-color: $editor-toolbar-link-active-border-color;
    }

    &::before {
      line-height: 30px;
    }

    &.fa-header-x::after {
      font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;
      font-size: 65%;
      position: relative;
      top: 2px;
      vertical-align: text-bottom;
    }

    &.fa-header-1::after {
      content: '1';
    }

    &.fa-header-2::after {
      content: '2';
    }

    &.fa-header-3::after {
      content: '3';
    }

    &.fa-header-bigger::after {
      content: '▲';
    }

    &.fa-header-smaller::after {
      content: '▼';
    }

    &.no-mobile {
      @media only screen and (max-width: 700px) {
        display: none;
      }
    }
  }


  i.separator {
    border-left: 1px solid $editor-toolbar-separator-border-left-color;
    border-right: 1px solid $editor-toolbar-separator-border-right-color;
    color: transparent;
    display: inline-block;
    margin: 0 6px;
    text-indent: -10px;
    width: 0;
  }

  &::after,
  &::before {
    content: ' ';
    display: block;
    height: 1px;
  }

  &::before {
    margin-bottom: 8px;
  }

  &::after {
    margin-top: 8px;
  }

  &:hover {
    opacity: .8;
  }


  &.disabled-for-preview a:not(.no-disable) {
    background: $editor-toolbar-disable-for-preview-background-color;
    border-color: transparent;
    pointer-events: none;
    text-shadow: inherit;
  }
}

.editor-wrapper {
  .title:focus,
  .title:hover {
    opacity: .8;
  }
}

.editor-statusbar {
  color: $editor-statusbar-text-color;
  font-size: 12px;
  padding: 8px 10px;
  text-align: right;

  span {
    display: inline-block;
    margin-left: 1em;
    min-width: 4em;
  }

  .lines::before {
    content: $easymde-statusbar-lines;
  }

  .words::before {
    content: $easymde-statusbar-words;
  }

  .characters::before {
    content: $easymde-statusbar-characters;
  }

  .counts::before {
    content: $easymde-statusbar-counts;
  }
}

.editor-preview {
  background: $editor-preview-background-color;
  box-sizing: border-box;
  display: none;
  height: 100%;
  left: 0;
  overflow: auto;
  padding: 10px;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 7;
}

.editor-preview-side {
  background: $editor-preview-background-color;
  border: 1px solid $editor-preview-side-border-color;
  bottom: 0;
  box-sizing: border-box;
  display: none;
  overflow: auto;
  padding: 10px;
  position: fixed;
  right: 0;
  top: 50px;
  width: 50%;
  z-index: $easymde-zindex;
}

.editor-preview-active-side,
.editor-preview-active {
  display: block;
}

.editor-preview > p,
.editor-preview-side > p {
  margin-top: 0;
}

.editor-preview pre,
.editor-preview-side pre {
  background: $editor-preview-pre-background-color;
  margin-bottom: 10px;
}

.editor-preview table td,
.editor-preview table th,
.editor-preview-side table td,
.editor-preview-side table th {
  border: 1px solid $editor-preview-table-border-color;
  padding: 5px;
}
